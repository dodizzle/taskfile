version: '3'

tasks:
  delete-helm-secrets:
    desc: Delete all Helm secrets for a release in a namespace
    cmds:
      - |
        echo -n "Enter Helm release name: "
        read RELEASE
        echo -n "Enter namespace: "
        read NAMESPACE
        echo "Deleting Helm secrets for release '$RELEASE' in namespace '$NAMESPACE'..."
        kubectl -n $NAMESPACE delete secret -l "owner=helm,name=$RELEASE"
      
  edit-bash-profile:
    desc: Edit bash profile
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - code ~/.bash_profile
      
  source-bash-profile:
    desc: Source bash profile
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - bash -c '. ~/.bash_profile'
  clean-docker:
    desc: Clean up docker images and volumes
    cmds:
      - docker system prune -fa --volumes

  sync:
    desc: Sync the Taskfile.yaml to ~
    cmds:
      - |
        if [ $(task check-dir DIR_PATH=/tmp/taskfile) = "false" ]; then
          gh repo clone dodizzle/taskfile /tmp/taskfile
        else
          cd /tmp/taskfile && git pull
        fi
      - cp /tmp/taskfile/Taskfile.yaml ~/

  edit-task-file:
    desc: Open Taskfile.yaml in vs code editor
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - |
        if [ $(task check-dir DIR_PATH=/tmp/taskfile) = "false" ]; then
          gh repo clone dodizzle/taskfile /tmp/taskfile
        else
          cd /tmp/taskfile && git pull
        fi
      - code /tmp/taskfile/Taskfile.yaml

  commit-taskfile:
    desc: Add Taskfile.yaml, commit it, and push to GitHub
    dir: /tmp/taskfile/
    cmds:
      - git add Taskfile.yaml
      - git commit -m "Update Taskfile.yaml"
      - git push origin main
      
  check-dir:
      desc: Check if a directory exists
      cmds:
        - test -d {{.DIR_PATH}} && echo "true" || echo "false"
      vars:
        DIR_PATH: "{{.DIR_PATH | default '.'}}"

  gcloud-auth:
    desc: Authenticate to gcloud
    cmds:
      - gcloud auth login
      - gcloud auth application-default login

  renew-rancher-tokens:
    desc: Renew Rancher kubeconfig tokens for all clusters
    dir: ~/.kube
    cmds:
      - source venv/bin/activate && python renew_rancher_tokens.py

  renew-rancher-tokens-dry:
    desc: Preview token renewal without making changes (dry run)
    dir: ~/.kube
    cmds:
      - source venv/bin/activate && python renew_rancher_tokens.py --dry-run

  renew-rancher-token:
    desc: Renew Rancher token for a specific cluster
    dir: ~/.kube
    cmds:
      - |
        echo -n "Enter cluster name (dev, stg, prod, etc.): "
        read CLUSTER
        source venv/bin/activate && python renew_rancher_tokens.py --cluster $CLUSTER
        
  check-token-expiry:
    desc: Check when Rancher tokens expire (estimates 30 days from creation)
    cmds:
      - |
        echo "Checking token expiry dates (estimated 30 days from last renewal)..."
        echo "Note: Actual expiry dates require API calls to Rancher"
        echo ""
        BACKUP_FILES=$(ls -t ~/.kube/config.backup_* 2>/dev/null | head -1)
        if [ -n "$BACKUP_FILES" ]; then
          LAST_RENEWAL=$(stat -f "%Sm" -t "%Y-%m-%d %H:%M:%S" "$BACKUP_FILES" 2>/dev/null || stat -c "%y" "$BACKUP_FILES" 2>/dev/null | cut -d' ' -f1-2)
          echo "Last renewal detected: $LAST_RENEWAL"
          echo "Estimated expiry: 30 days from last renewal"
        else
          echo "No backup files found. Unable to estimate last renewal date."
        fi